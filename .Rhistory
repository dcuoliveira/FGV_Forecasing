rm(list=ls())
library(readr)
library(here)
library(xtable)
library(Hmisc)
library(Hmisc)
library(lmtest)
library(FinTS)
simu_df = read_delim(here('src', 'data', 'simu_data_lecture5.csv'), ";", escape_double = FALSE, trim_ws = TRUE)
#head(simu_df)
y1 = simu_df$y1
par(mfrow=c(2,1))
acf.inven <- list('acf' = acf(y1, lag.max = 15, main=" ACF for y1"),
'pacf' = pacf(y1, lag.max = 15, main=" PACF for y1"))
adf.test(y1)
install.packages('aTSA')
library(aTSA)
adf.test(y1)
ic.inven <- list('AIC' = data.table(), 'BIC' = data.table())
install.packages('data.table')
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
library(data.table)
ic.inven <- list('AIC' = data.table(), 'BIC' = data.table())
setnames(ic.inven$AIC, c('MA0', 'MA1', 'MA2'))
ic.inven <- list('AIC' = data.table(), 'BIC' = data.table())
for (ar.lag in 0:11) {
arma.stat <- rep(0, 6)
for (ma.lag in 0:2) {
arma.fit <- arima(y1, order = c(ar.lag, 0, ma.lag))
# arma.fit
# AIC
arma.stat[ma.lag + 1] <- arma.fit$aic
# BIC
arma.stat[ma.lag + 4] <- -2 * arma.fit$loglik + (ar.lag + ma.lag) * log(length(y1))
}
ic.inven$AIC <- rbindlist(list(ic.inven$AIC, data.table(t(arma.stat[1:3]))))
ic.inven$BIC <- rbindlist(list(ic.inven$BIC, data.table(t(arma.stat[4:6]))))
}
setnames(ic.inven$AIC, c('MA0', 'MA1', 'MA2'))
ic.inven$AIC[, AR := 0:11]
setnames(ic.inven$BIC, c('MA0', 'MA1', 'MA2'))
BIC_selec.mat <- rbind(ic.inven$BIC[, AR := (0:11)])
print(xtable(BIC_selec.mat))
install.packages('xtable')
print(xtable(BIC_selec.mat))
library(xtable)
print(xtable(BIC_selec.mat))
arma_y1 = arima(simu_df$y1, order = c(2, 0, 0))
par(mfrow=c(2,1))
acf.inven = list('acf' = acf(arma_y1$residuals, lag.max = 15, main=" ACF for ARMA(2,0) residuals"),
'pacf' = pacf(arma_y1$residuals, lag.max = 15, main=" PACF for ARMA(2,0) residuals"))
bptest(arma_y1$residuals)
install.packages('lmtest')
library(lmtest)
bptest(arma_y1$residuals)
arma_y1$residuals
?bptest
predict(arma_y1)
df_bg = as.data.frame(cbind(arma_y1$residuals, Lag(arma_y1$residuals, 1), Lag(arma_y1$residuals, 2)))
colnames(df_bg) = c('e', 'e_l1', 'e_l2')
library(Hmisc)
df_bg = as.data.frame(cbind(arma_y1$residuals, Lag(arma_y1$residuals, 1), Lag(arma_y1$residuals, 2)))
colnames(df_bg) = c('e', 'e_l1', 'e_l2')
summary(lm(e ~ e_l1 + e_l2, data = df_bg))
forecast.inven = list()
forecast.inven$rcpi$dynamic = as.numeric(predict(arma_y1,
n.ahead = 16)$pred)
forecast.inven$rcpi$static = rep(0, 16)
for (c in 1:16) {
inven.fit = arima(arima.inven[1:(71 + c), rcpi], order = c(3, 0, 2))
forecast.inven$rcpi$static[c] = predict(inven.fit, n.ahead = 1)$pred
}
length(y1)
y1[1:2]
forecast.inven$rcpi$static = rep(0, 16)
for (c in 1:16) {
inven.fit = arima(y1[1:(71 + c)], order = c(2, 0, 0))
forecast.inven$rcpi$static[c] = predict(inven.fit, n.ahead = 1)$pred
}
forecast.inven$rcpi$multi = rep(0, 16)
for (c in 1:16) {
inven.fit = arima(arima.inven[1:(70 + c)], order = c(2, 0, 0))
forecast.inven$rcpi$multi[c] = predict(inven.fit, n.ahead = 2)$pred[2]
}
for (c in 1:16) {
inven.fit = arima(y1[1:(70 + c)], order = c(2, 0, 0))
forecast.inven$rcpi$multi[c] = predict(inven.fit, n.ahead = 2)$pred[2]
}
forecas_simu = list()
forecas_simu$y1$dynamic = as.numeric(predict(arma_y1,
n.ahead = 16)$pred)
forecas_simu$y1$static = rep(0, 16)
for (c in 1:16) {
simu_fit = arima(y1[1:(71 + c)], order = c(2, 0, 0))
forecas_simu$y1$static[c] = predict(simu_fit, n.ahead = 1)$pred
}
forecas_simu$y1$multi = rep(0, 16)
for (c in 1:16) {
simu_fit = arima(y1[1:(70 + c)], order = c(2, 0, 0))
forecas_simu$y1$multi[c] = predict(simu_fit, n.ahead = 2)$pred[2]
}
forecas_simu$y1$dynamic
mse_dynamic = mean((forecas_simu$y1$dynamic - y1[71:(70+16)])^2)
mse_dynamic = mean((forecas_simu$y1$dynamic - y1[71:(70+16)])^2)
mse_static = mean((forecas_simu$y1$static - y1[71:(70+16)])^2)
print(paste0('MSE dynamic: ', mse_dynamic, ' MSE static: ', mse_static))
print(paste0('MSE dynamic: ', mse_dynamic, ' MSE static: ', mse_static))
mse_multi = mean((forecas_simu$y1$multi - y1[71:(70+16)])^2)
mse_multi
print(paste0('MSE multi step (2): ', mse_multi))
